
def versionValues() {
    def propsFile = file("version.properties")
    def Properties props = new Properties()
    def name
    def code
    if (propsFile.canRead()) {
        props.load(new FileInputStream(propsFile))
        name = props["versionName"]
        code = props["versionCode"].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    props["versionCode"] = (code + 1).toString()
    props.save(new FileOutputStream(propsFile), "")

    logger.info("incrementing build version ${code} -> ${code + 1}")
    return new Tuple(name, code)
}

android {
    def version = versionValues()

    packagingOptions {
        exclude "META-INF/LICENSE"

        doNotStrip "*/armeabi-v7a/*.so"
        doNotStrip '*/arm64-v8a/*.so'

        exclude ('/lib/mips/**')
        exclude ('/lib/mips64/**')
        exclude ('/lib/x86_64/**')
        exclude ('/lib/x86/**')

        // The PDF library and Readium both provide this shared library. This will
        // cause the build to fail because Gradle doesn"t know which one to pick.
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }

    signingConfigs {
        release {
          keyAlias nyplSigningKeyAlias
          keyPassword nyplSigningKeyPassword
          storeFile file("keystore.jks")
          storePassword nyplSigningStorePassword
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    defaultConfig {
        multiDexEnabled true
        versionName = version.get(0)
        versionCode = version.get(1)
        setProperty("archivesBaseName", "open-ebooks-${versionName}-${versionCode}")
    }

    lintOptions {
        checkReleaseBuilds false
    }
}

dependencies {
    implementation libraries.nyplDRMAdobeProvider
    implementation libraries.nyplDRMCore
    implementation libraries.nyplFindaway
    implementation libraries.simplifiedAccountSourceNYPLRegistry
    implementation libraries.simplifiedAnalyticsCirculation
    implementation libraries.simplifiedMain
    implementation libraries.instabug
    implementation libraries.firebaseAnalytics
    implementation libraries.firebaseCrashlytics

    annotationProcessor libraries.googleAutoValue
}
