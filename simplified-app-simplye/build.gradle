import org.librarysimplified.gradle.RequiredAssetsTask

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

// Fail the build if these assets aren't present and
// org.librarysimplified.strictmode is enabled.
//
def requiredFiles = [:]
requiredFiles["cardcreator.conf"] =
  "a51c45891eb599076c456a54d748eaf45cd7b093ec6a4fe2660378fab8915d86"
requiredFiles["overdrive.json"] =
  "ba5b2678f0e44744df33917ec342a76a7580f58186157ba804ba3ac63516a37a"
requiredFiles["ReaderClientCert.sig"] =
  "280838a4cb5c2ca4a2c8cf14e93f8ff72dbc6046cf188b5e83cf830f5159ce1e"
requiredFiles["feedbooks.conf"] =
  "1a8b5992a2c2d35b9daf14f02a6088ad55f860609e77c9ffed6c11ec7da14c0c"

android {
  defaultConfig {
    versionName = project.version
    versionCode = versionCode(project.version)
    setProperty("archivesBaseName", "simplye-${versionName}")
  }
  sourceSets {
    main {
      if (project.hasProperty('org.librarysimplified.app.assets.simplye')) {
        assets.srcDirs +=
          project.getProperty('org.librarysimplified.app.assets.simplye')
      }
    }
  }
  applicationVariants.all { variant ->
    def strictModeTask =
      tasks.create(name: "strictMode${variant.name.capitalize()}", type: RequiredAssetsTask) {
        required = requiredFiles
        apkFiles = variant.outputs.collect { out ->
          out.outputFile
        }
      }
    variant.assemble.finalizedBy strictModeTask
  }
}

dependencies {
  implementation project(":simplified-main")
  implementation project(":simplified-accounts-source-nyplregistry")
  implementation project(":simplified-analytics-circulation")
  implementation project(":simplified-crashlytics")
  implementation project(":simplified-migration-from3master")
  implementation libraries.firebase_analytics
  implementation libraries.firebase_crashlytics
  implementation libraries.nypl_drm_core
  implementation libraries.nypl_findaway
  implementation libraries.nypl_overdrive

  if (nyplNexusDepend) {
    implementation libraries.nypl_drm_adobe
  }
  annotationProcessor libraries.google_autovalue_processor
}
