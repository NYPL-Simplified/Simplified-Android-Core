def versionValues() {
  def propsFile = file("version.properties")
  def Properties props = new Properties()
  def name
  def code
  if (propsFile.canRead()) {
    props.load(new FileInputStream(propsFile))
    name = props["versionName"]
    code = props["versionCode"].toInteger()
  } else {
    throw new FileNotFoundException("Could not read version.properties!")
  }

  props["versionCode"] = (code + 1).toString()
  props.save(new FileOutputStream(propsFile), "")

  logger.info("incrementing build version ${code} -> ${code + 1}")
  return new Tuple(name, code)
}

android {
  def version = versionValues()

  defaultConfig {
    multiDexEnabled true
    versionName = version.get(0)
    versionCode = version.get(1)
    setProperty("archivesBaseName", "vanilla-${versionName}-${versionCode}")
  }

  signingConfigs {
    release {
      keyAlias findProperty("org.librarysimplified.keyAlias")
      keyPassword findProperty("org.librarysimplified.keyPassword")
      storeFile file("keystore.jks")
      storePassword findProperty("org.librarysimplified.storePassword")
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }

  packagingOptions {
    exclude "META-INF/LICENSE"

    // The PDF library and Readium both provide this shared library. This will
    // cause the build to fail because Gradle doesn"t know which one to pick.
    pickFirst "lib/arm64-v8a/libc++_shared.so"
    pickFirst "lib/armeabi-v7a/libc++_shared.so"
    pickFirst "lib/x86/libc++_shared.so"
  }
}

dependencies {
  implementation project(":simplified-main")
  implementation project(":simplified-accounts-source-nyplregistry")

  annotationProcessor libraries.googleAutoValue
}
